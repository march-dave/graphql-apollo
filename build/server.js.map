{"version":3,"sources":["../src/server.js"],"names":["port","process","env","PORT","app","pubSub","PubSub","server","ApolloServer","typeDefs","schema","resolvers","Query","context","req","res","toke","headers","introspection","playground","db","applyMiddleware","listen","console","log","graphqlPath"],"mappings":";;AAAA;;;;AASA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAnBA,IAAMA,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,MAAM,wBAAZ;;AAEA;AACA;AACA;AACA;;AAYA;;;AAGA,IAAMC,SAAS,IAAIC,2BAAJ,EAAf;;AAEA,IAAMC,SAAS,IAAIC,iCAAJ;AACbC,YAAUC,gBADG;AAEbC,aAAW;AACTC;AACA;AACA;AACA;AACA;AACA;AANS,GAFE;;AAWbC,WAAS;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,QAAQC,GAAR,QAAQA,GAAR;AAAA,WAAmB;AAC1BC,YAAMF,IAAIG,OAAJ,CAAY,YAAZ;AADoB,KAAnB;AAAA,GAXI;;AAebC,iBAAe,IAfF;AAgBbC,cAAY;AAhBC,cAiBJ;AACPC,kBADO;AAEPf;AAFO,CAjBI,EAAf;;AAuBAE,OAAOc,eAAP,CAAuB,EAAEjB,QAAF,EAAvB;;AAEAA,IAAIkB,MAAJ,CAAWtB,IAAX,EAAiB,YAAM;AACrBuB,UAAQC,GAAR,iCAA0CjB,OAAOkB,WAAjD,SAAgEzB,IAAhE;AACD,CAFD","file":"server.js","sourcesContent":["import express from \"express\";\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// import bodyParser from \"body-parser\";\n// import cors from \"cors\";\n// import jwt from \"jsonwebtoken\";\n// import bcrypt from \"bcryptjs\";\n\nimport db from \"./db\";\nimport Query from \"./resolvers/Query\";\nimport User from \"./resolvers/User\";\n\nimport Mutation from './resolvers/Mutation'\nimport Subscription from './resolvers/Subscription'\nimport Post from './resolvers/Post'\nimport Comment from './resolvers/Comment'\nimport schema from \"./schema\";\n\n// Apollo Server version - 2\nimport { ApolloServer, PubSub } from \"apollo-server-express\";\n\nconst pubSub = new PubSub();\n\nconst server = new ApolloServer({\n  typeDefs: schema,\n  resolvers: {\n    Query,\n    // Mutation,\n    // Subscription,\n    // User,\n    // Post,\n    // Comment\n  },\n\n  context: ( {req, res} ) => ({\n    toke: req.headers['auth-token']\n  }),\n\n  introspection: true,\n  playground: true,\n  context: {\n    db,\n    pubSub\n  }\n});\n\nserver.applyMiddleware({ app });\n\napp.listen(port, () => {\n  console.log(`Express listening on port: ${server.graphqlPath} ${port}`);\n});\n"]}