"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _templateObject = _taggedTemplateLiteral(["\n\ntype Query {\n    users(query: String): [User!]!\n    posts(query: String): [Post!]!\n    comments: [Comment!]!\n    me: User!\n    post: Post!\n}\n\ntype Mutation {\n    createUser(data: CreateUserInput!): User!\n    deleteUser(id: ID!): User!\n    updateUser(id: ID!, data: UpdateUserInput!): User!\n    createPost(data: CreatePostInput!): Post!\n    deletePost(id: ID!): Post!\n    updatePost(id: ID!, data: UpdatePostInput!): Post!\n    createComment(data: CreateCommentInput!): Comment!\n    deleteComment(id: ID!): Comment!\n    updateComment(id: ID!, data: UpdateCommentInput!): Comment!\n}\n\ntype Subscription {\n    comment(postId: ID!): CommentSubscriptionPayload!\n    post: PostSubscriptionPayload!\n}\n\ninput CreateUserInput {\n    name: String!\n    email: String!\n    age: Int\n}\n\ninput UpdateUserInput {\n    name: String\n    email: String\n    age: Int\n}\n\ninput CreatePostInput {\n    title: String!\n    body: String!\n    published: Boolean!\n    author: ID!\n}\n\ninput UpdatePostInput {\n    title: String\n    body: String\n    published: Boolean\n}\n\ninput CreateCommentInput {\n    text: String!\n    author: ID!\n    post: ID!\n}\n\ninput UpdateCommentInput {\n    text: String\n}\n\ntype User {\n    id: ID!\n    name: String!\n    email: String!\n    age: Int\n    posts: [Post!]!\n    comments: [Comment!]!\n}\n\ntype Post {\n    id: ID!\n    title: String!\n    body: String!\n    published: Boolean!\n    author: User!\n    comments: [Comment!]!\n}\n\ntype Comment {\n    id: ID!\n    text: String!\n    author: User!\n    post: Post!\n}\n\nenum MutationType {\n    CREATED\n    UPDATED\n    DELETED\n}\n\ntype PostSubscriptionPayload {\n    mutation: MutationType!\n    data: Post!\n}\n\ntype CommentSubscriptionPayload {\n    mutation: MutationType!\n    data: Comment!\n}\n\n"], ["\n\ntype Query {\n    users(query: String): [User!]!\n    posts(query: String): [Post!]!\n    comments: [Comment!]!\n    me: User!\n    post: Post!\n}\n\ntype Mutation {\n    createUser(data: CreateUserInput!): User!\n    deleteUser(id: ID!): User!\n    updateUser(id: ID!, data: UpdateUserInput!): User!\n    createPost(data: CreatePostInput!): Post!\n    deletePost(id: ID!): Post!\n    updatePost(id: ID!, data: UpdatePostInput!): Post!\n    createComment(data: CreateCommentInput!): Comment!\n    deleteComment(id: ID!): Comment!\n    updateComment(id: ID!, data: UpdateCommentInput!): Comment!\n}\n\ntype Subscription {\n    comment(postId: ID!): CommentSubscriptionPayload!\n    post: PostSubscriptionPayload!\n}\n\ninput CreateUserInput {\n    name: String!\n    email: String!\n    age: Int\n}\n\ninput UpdateUserInput {\n    name: String\n    email: String\n    age: Int\n}\n\ninput CreatePostInput {\n    title: String!\n    body: String!\n    published: Boolean!\n    author: ID!\n}\n\ninput UpdatePostInput {\n    title: String\n    body: String\n    published: Boolean\n}\n\ninput CreateCommentInput {\n    text: String!\n    author: ID!\n    post: ID!\n}\n\ninput UpdateCommentInput {\n    text: String\n}\n\ntype User {\n    id: ID!\n    name: String!\n    email: String!\n    age: Int\n    posts: [Post!]!\n    comments: [Comment!]!\n}\n\ntype Post {\n    id: ID!\n    title: String!\n    body: String!\n    published: Boolean!\n    author: User!\n    comments: [Comment!]!\n}\n\ntype Comment {\n    id: ID!\n    text: String!\n    author: User!\n    post: Post!\n}\n\nenum MutationType {\n    CREATED\n    UPDATED\n    DELETED\n}\n\ntype PostSubscriptionPayload {\n    mutation: MutationType!\n    data: Post!\n}\n\ntype CommentSubscriptionPayload {\n    mutation: MutationType!\n    data: Comment!\n}\n\n"]);

var _apolloBoost = require("apollo-boost");

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var schema = (0, _apolloBoost.gql)(_templateObject);

exports.default = schema;
//# sourceMappingURL=2schema.js.map