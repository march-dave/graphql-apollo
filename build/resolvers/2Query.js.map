{"version":3,"sources":["../../src/resolvers/2Query.js"],"names":["Query","users","parent","args","info","db","query","filter","user","name","toLowerCase","includes","posts","post","isTitleMatch","title","isBodyMatch","body","comments","me","id","email","published","default"],"mappings":";;;;;AAAA,IAAMA,QAAQ;AACVC,SADU,iBACJC,MADI,EACIC,IADJ,QACkBC,IADlB,EACwB;AAAA,YAAZC,EAAY,QAAZA,EAAY;;AAC9B,YAAI,CAACF,KAAKG,KAAV,EAAiB;AACb,mBAAOD,GAAGJ,KAAV;AACH;;AAED,eAAOI,GAAGJ,KAAH,CAASM,MAAT,CAAgB,UAACC,IAAD,EAAU;AAC7B,mBAAOA,KAAKC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCR,KAAKG,KAAL,CAAWI,WAAX,EAAjC,CAAP;AACH,SAFM,CAAP;AAGH,KATS;AAUVE,SAVU,iBAUJV,MAVI,EAUIC,IAVJ,SAUkBC,IAVlB,EAUwB;AAAA,YAAZC,EAAY,SAAZA,EAAY;;AAC9B,YAAI,CAACF,KAAKG,KAAV,EAAiB;AACb,mBAAOD,GAAGO,KAAV;AACH;;AAED,eAAOP,GAAGO,KAAH,CAASL,MAAT,CAAgB,UAACM,IAAD,EAAU;AAC7B,gBAAMC,eAAeD,KAAKE,KAAL,CAAWL,WAAX,GAAyBC,QAAzB,CAAkCR,KAAKG,KAAL,CAAWI,WAAX,EAAlC,CAArB;AACA,gBAAMM,cAAcH,KAAKI,IAAL,CAAUP,WAAV,GAAwBC,QAAxB,CAAiCR,KAAKG,KAAL,CAAWI,WAAX,EAAjC,CAApB;AACA,mBAAOI,gBAAgBE,WAAvB;AACH,SAJM,CAAP;AAKH,KApBS;AAqBVE,YArBU,oBAqBDhB,MArBC,EAqBOC,IArBP,SAqBqBC,IArBrB,EAqB2B;AAAA,YAAZC,EAAY,SAAZA,EAAY;;AACjC,eAAOA,GAAGa,QAAV;AACH,KAvBS;AAwBVC,MAxBU,gBAwBL;AACD,eAAO;AACHC,gBAAI,QADD;AAEHX,kBAAM,MAFH;AAGHY,mBAAO;AAHJ,SAAP;AAKH,KA9BS;AA+BVR,QA/BU,kBA+BH;AACH,eAAO;AACHO,gBAAI,KADD;AAEHL,mBAAO,aAFJ;AAGHE,kBAAM,EAHH;AAIHK,uBAAW;AAJR,SAAP;AAMH;AAtCS,CAAd;;QAyCkBC,O,GAATvB,K","file":"2Query.js","sourcesContent":["const Query = {\n    users(parent, args, { db }, info) {\n        if (!args.query) {\n            return db.users\n        }\n\n        return db.users.filter((user) => {\n            return user.name.toLowerCase().includes(args.query.toLowerCase())\n        })\n    },\n    posts(parent, args, { db }, info) {\n        if (!args.query) {\n            return db.posts\n        }\n\n        return db.posts.filter((post) => {\n            const isTitleMatch = post.title.toLowerCase().includes(args.query.toLowerCase())\n            const isBodyMatch = post.body.toLowerCase().includes(args.query.toLowerCase())\n            return isTitleMatch || isBodyMatch\n        })\n    },\n    comments(parent, args, { db }, info) {\n        return db.comments\n    },\n    me() {\n        return {\n            id: '123098',\n            name: 'Mike',\n            email: 'mike@example.com'\n        }\n    },\n    post() {\n        return {\n            id: '092',\n            title: 'GraphQL 101',\n            body: '',\n            published: false\n        }\n    }\n}\n\nexport { Query as default }"]}